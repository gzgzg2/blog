

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>나비랑 나리 주인님</title>
  <subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle>
  <updated>2022-06-27T19:59:58+09:00</updated>
  <author>
    <name>박우람</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2022 박우람 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>[Java] synchronized</title>
    <link href="http://localhost:4000/posts/java-syncronized/" rel="alternate" type="text/html" title="[Java] synchronized" />
    <published>2022-06-26T00:00:00+09:00</published>
  
    <updated>2022-06-26T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/java-syncronized/</id>
    <content src="http://localhost:4000/posts/java-syncronized/" />
    <author>
      <name>박우람</name>
    </author>

  
    
    <category term="Java" />
    
  

  
    <summary>
      





      Java synchronized
Java의 synchronized는 Thread간의 동기화 매커니즘이다. synchronized는 하나의 객체를 여러 스레드에서 동시에 사용하거나
static으로 선언한 객체를 여러 스레드에서 사용할 경우에 적용한다. 주의할 점은 synchronized는 객체 단위로 동작하기 때문에
한 객체에서 synchronized를 사용하는 여러개의 메서드가 있다면 해당 키워드가 적용된 메서드는 동시에 실행되지 않는다.
또한 내부에서 동기화를 위해 Monitor를 사용하고 있으므로 성능저하 문제가 발생할 수 있다.

Monitor
모니터란 동시에 수행중인 프로세스나 스레드 사이에서 동기화를 적용하기 위한 high-level synchronization construct 이다.
모니터...
    </summary>
  

  </entry>

  
  <entry>
    <title>[Java] Getter Setter 필요없을까?</title>
    <link href="http://localhost:4000/posts/no-getter-setter/" rel="alternate" type="text/html" title="[Java] Getter Setter 필요없을까?" />
    <published>2022-06-12T00:00:00+09:00</published>
  
    <updated>2022-06-26T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/no-getter-setter/</id>
    <content src="http://localhost:4000/posts/no-getter-setter/" />
    <author>
      <name>박우람</name>
    </author>

  
    
    <category term="Java" />
    
  

  
    <summary>
      





      들어가며
이전에 무지성으로 남발하여 주로 사용하였던 Getter Setter가 객체지향 세계에선 아주 지양해야할 패턴이라는 것을 알게 되었다.
Getter Setter가 존재하는 이상 그 클래스는 능도적인 객체가 아닌 자료구조에 불과하다고 한다. 그런데 가끔 특정한 라이브러리에서 Getter Setter 를 필요로 하는 것을 느꼈다.
물론 옵션을 설정할 수 있지만 주의해야 하는 것은 마찬가지이다. 그래서 이번에는 Getter Setter 에서 벗어나고 싶은데, 완전히 자유로워지기 힘든 이유를 정리하고자 한다.

Getter, Setter 지양해야 하는 이유
자바 개발자라면 객제지향 프로그래밍의 4대 원칙을 한번쯤 들어봤을 것이다. 간단하게 소개하자면 아래와 같다.

OOP 4대 원칙
1. 추상화(Abs...
    </summary>
  

  </entry>

  
  <entry>
    <title>[네트워크 스터디] Chapter_04 엑세스 회선을 통해 인터넷의 내부로 !</title>
    <link href="http://localhost:4000/posts/network-study-04/" rel="alternate" type="text/html" title="[네트워크 스터디] Chapter_04 엑세스 회선을 통해 인터넷의 내부로 !" />
    <published>2022-06-08T00:00:00+09:00</published>
  
    <updated>2022-06-08T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/network-study-04/</id>
    <content src="http://localhost:4000/posts/network-study-04/" />
    <author>
      <name>박우람</name>
    </author>

  
    
    <category term="networkStudy" />
    
  

  
    <summary>
      





      ADSL 기술을 이용한 엑세스 회선의 구조와 동작

✔️  인터넷의 기본은 가정이나 회사의 LAN과 같다


  인터넷은 거대하고 복잡한 시스템이지만 패킷을 중재하는 부분은 가정, 회사의 LAN과 동일하다.
  라우터의 기본적인 구조나 동작도 전혀 다르지 않다
  가정이나 회사의 네트워크 규모가 커진 것이 인터넷


✔️ 가정, 회사의 네트워크와 인터넷의 차이점


  인터넷은 중계 장치의 거리가 매우 멀다.
  대한민국과 미국을 연결하려면 태평양을 넘어야하기 때문에 이더넷 케이블로 연결은 어렵다.
  라우터의 등록정보가 수시로 바뀌기 때문에 경로 등록을 자동화 해야한다.
    
      통신 장애가 발생하거나 인터넷에 새로 접속하는 회사가 있을 때마다 변경하는 것은 무리가 있음
    
  
  ...
    </summary>
  

  </entry>

  
  <entry>
    <title>[네트워크 스터디] Chapter_03 케이블의 앞은 LAN 기기였다.</title>
    <link href="http://localhost:4000/posts/network-study-03/" rel="alternate" type="text/html" title="[네트워크 스터디] Chapter_03 케이블의 앞은 LAN 기기였다." />
    <published>2022-05-29T00:00:00+09:00</published>
  
    <updated>2022-05-29T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/network-study-03/</id>
    <content src="http://localhost:4000/posts/network-study-03/" />
    <author>
      <name>박우람</name>
    </author>

  
    
    <category term="networkStudy" />
    
  

  
    <summary>
      





      📗 Chapter_03 케이블의 앞은 LAN 기기였다. _허브와 스위치, 라우터의 탐험

🌟 3장의 요점 짚고 넘어가기 🌟


  해당 챕터는 클라이언트 PC가 가정이나 회사의 LAN에 접속되고, 앞부분이 ADSL이나 광섬유(FTTH)등의 광대역 회선에 의해 인터넷에 접속된다는 최신의 대표적인 상황을 가정하여 설명한다.

  이 경우 LAN 어댑터가 송신한 패킷은 스위칭 허브 등을 경유하여 인터넷 접속용 라우터에 도착한다. 라우터의 앞부분은 이미 인터넷이므로여기에서부터 앞부분은 통신사가 패킷을 상대에게 운반한다. 우체통에 봉투를 넣으면 그 후에는 집배원이 편지를 상대에게 전달하는 것과 유사하다.



1. 케이블과 리피터 허브속을 신호가 흘러간다.

하나하나의 패킷이 독립된 것으로 동작한다.

컴퓨터에...
    </summary>
  

  </entry>

  
  <entry>
    <title>[글또 7기] 다짐</title>
    <link href="http://localhost:4000/posts/%EA%B8%80%EB%98%907%EA%B8%B0-%EB%8B%A4%EC%A7%90/" rel="alternate" type="text/html" title="[글또 7기] 다짐" />
    <published>2022-05-14T00:00:00+09:00</published>
  
    <updated>2022-05-14T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/%EA%B8%80%EB%98%907%EA%B8%B0-%EB%8B%A4%EC%A7%90/</id>
    <content src="http://localhost:4000/posts/%EA%B8%80%EB%98%907%EA%B8%B0-%EB%8B%A4%EC%A7%90/" />
    <author>
      <name>박우람</name>
    </author>

  
    
    <category term="daily" />
    
  

  
    <summary>
      





      들어가며
읽기 좋은 글을 꾸준하게 작성하고 싶어서 글또라는 개발자 커뮤니티에서 활동하게 되었다. 
꾸준하게 글을 작성하는 것이 목표인데….  5월 초에 포스팅한 이후로 인제야 글을 작성한다. 느슨해지지 않기 위해 활동하면서 이루고 싶은 목표들을 정하기로 결심 !

참여한 이유
1. 가독성 높은 글
많은 글을 작성해보진 않았지만, 지금까지 포스팅했던 내용을 다시 읽어보면 가독성이 매우 떨어진다. 그리고 불친절한 설명 때문에 다른 사람이 내가 작성한 글을 읽었을 때 큰 혼란이 올 것 같았다. 이런 문제점을 어떻게 고쳐야 하나 고민하고 있을 때 운 좋게 발견한 것이 글또이다.

2. 게으름 탈출
강의를 듣거나 책을 읽는 것은 꾸준하게 하는 것이 어렵지 않은데 이상하게 글을 작성하려고 하면 게을러진다. 마음먹...
    </summary>
  

  </entry>

</feed>


